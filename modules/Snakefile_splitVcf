#!/usr/bin/python

rule subset_vcf:
    input:
        vcf
    output:
        'vcf_chunks/{chunk}.vcf'
    run:
        (chrom, start, end) = wildcards.chunk.split('.')
        if chrom not in CHROMOSOMES and chrom.strip('chr') in CHROMOSOMES:
            chrom = chrom.strip('chr')
        vcf = pysam.TabixFile(input[0])
        with open(output[0], 'w') as out:
            for line in vcf.header:
                a = line.decode("utf-8")
                out.write(a + '\n')
            for line in vcf.fetch(chrom, int(start), int(end)):
                out.write(line + '\n')
        vcf.close()


rule split_multiallelic:
    input:
        'vcf_chunks/{chunk}.vcf'
    output:
        'split_multiallelic_vcf_chunks/{chunk}.vcf'
    params:
        module = 'module load vcflib/v1.0.0-rc0-279-gc71853a;module load python/2.7'
    shell:
        '{params.module};vcfbreakmulti {input} | python scripts/MinimalRepVcf.py - {output}'

rule sort_min_rep_vcf:
    input:
        'split_multiallelic_vcf_chunks/{chunk}.vcf'
    output:
        'sorted_min_rep_vcf_chunks/{chunk}.vcf'
    params:
        module = 'module load igvtools/2.3.98'
    shell:
        '{params.module};igvtools sort {input} {output}'


rule rename_info:
    input:
        'sorted_min_rep_vcf_chunks/{chunk}.vcf'
    output:
        'info_renamed_vcf_chunks/{chunk}.vcf'
    run:
        with open(input[0]) as f, open(output[0], 'w') as out:
            for line in f:
                if line[0] == '#':
                    out.write(line)
                else:
                    line_list = line.split()
                    (chrom, pos, snp, ref, alt) = line_list[:5]
                    newId = '_'.join([chrom, pos, ref, alt])
                    line_list[7] = newId
                    out.write('\t'.join(line_list) + '\n')


