#!/usr/bin/python

rule subset_vcf:
    input:
        vcf
    output:
        'vcf_chunks/{chunk}.vcf'
    run:
        (chrom, start, end) = wildcards.chunk.split('.')
        vcf = pysam.TabixFile(input[0])
        with open(output[0], 'w') as out:
            for line in vcf.header:
                a = line.decode("utf-8")
                if not a.startswith('#CHROM'):
                    out.write(a + '\n')
            head_list = a.split()
            out.write('\t'.join(head_list[:9]))
            firstColumns = []
            all_genotypes = []
            maxGenos = 0
            for line in vcf.fetch(chrom, int(start), int(end)):
                line_list = line.split()
                (chrom, pos, snp, ref, alt) = line_list[:5]
                newAlt = '_'.join(alt.split(','))
                newId = '_'.join([chrom, pos, ref, newAlt])
                line_list[7] = newId
                line_list[8] = 'GT'
                genotypes = line_list[9:]
                keepGenos = []
                for geno in genotypes:
                    keepGenos.append(geno.split(':')[0])
                if len(set(keepGenos)) > maxGenos:
                    maxGenos = len(set(keepGenos))
                firstColumns.append(line_list[:9])
                all_genotypes.append(set(keepGenos))
            c = 1
            for i in range(maxGenos):
                out.write('\tSamp' + str(c))
                c += 1
            out.write('\n')
            for i in range(len(firstColumns)):
                colList = firstColumns[i]
                out.write('\t'.join(colList))
                myGenos = list(all_genotypes[i])
                while len(myGenos) < maxGenos:
                    myGenos = myGenos + myGenos
                for j in range(maxGenos):
                    out.write('\t' + myGenos[j])
                out.write('\n')
        vcf.close()


